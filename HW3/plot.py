import matplotlib.pyplot as plt

plt.plot([46.5,90.9,175.2,337.7])
plt.xticks([0,1,2,3], [1,2,4,8])
plt.ylabel("average throughput")
plt.xlabel("number of GPUs")
plt.savefig("1.1TP.png")
print("Experiment plot is successfully generated")
plt.clf()

plt.plot([196.649,201.927,211.752,237.383])
plt.xticks([0,1,2,3], [1,2,4,8])
plt.ylabel("training time")
plt.xlabel("number of GPUs")
plt.savefig("1.1TT.png")
print("Experiment plot is successfully generated")
plt.clf()

base = 46.5
plt.plot([1,90.9/(2*base),175.2/(4*base),337.7/(8*base)], label="experiment scaling")
plt.plot([1,1,1,1], ':r', label="ideal scaling")
plt.xticks([0,1,2,3], [1,2,4,8])
plt.ylabel("performance scaling")
plt.xlabel("number of GPUs")
plt.legend()
plt.savefig("1.2.png")
print("Experiment plot is successfully generated")
plt.clf()

plt.plot([1044.498,1367.312,1282.839,1253.359], label="strong scaling")
plt.plot([1044.498,1934.463,2679.397,4966.512], label="weak scaling")
plt.xticks([0,1,2,3], [1,2,4,8])
plt.ylabel("throughput")
plt.xlabel("number of GPUs")
plt.legend()
plt.savefig("2.1.png")
print("Experiment plot is successfully generated")
plt.clf()

plt.plot([229.776,175.527,187.085,191.485], label="strong scaling")
plt.plot([229.776,124.065,89.572,48.324], label="weak scaling")
plt.xticks([0,1,2,3], [1,2,4,8])
plt.ylabel("training time")
plt.xlabel("number of GPUs")
plt.legend()
plt.savefig("2.2.png")
print("Experiment plot is successfully generated")
plt.clf()

plt.plot([229.776,351.054,748.340,1531.883], label="strong scaling")
plt.plot([229.776,248.131,358.290,386.589], label="weak scaling")
plt.xticks([0,1,2,3], [1,2,4,8])
plt.ylabel("training cost")
plt.xlabel("number of GPUs")
plt.legend()
plt.savefig("2.3.png")
print("Experiment plot is successfully generated")
plt.clf()

base = 1044.498
plt.plot([1,1934.463/(2*base),2679.397/(4*base),4966.512/(8*base)], label="experiment scaling")
plt.plot([1,1,1,1], ':r', label="ideal scaling")
plt.xticks([0,1,2,3], [1,2,4,8])
plt.ylabel("performance scaling")
plt.xlabel("number of GPUs")
plt.legend()
plt.savefig("2.4.png")
print("Experiment plot is successfully generated")
plt.clf()

plt.plot([1044.498,1934.463,2679.397,4966.512], label="tf.distribute.NcclAllReduce")
plt.plot([1040.941,1879.371,3070.448,5401.033], label="tf.distribute.HierarchicalCopyAllReduce")
plt.plot([1045.438,2050.008,2941.609,5263.412], label="tf.distribute.ReductionToOneDevice")
plt.xticks([0,1,2,3], [1,2,4,8])
plt.ylabel("throughput")
plt.xlabel("number of GPUs")
plt.legend()
plt.savefig("2.5.png")
print("Experiment plot is successfully generated")
plt.clf()

plt.plot([1044.498,1934.463,2679.397,4966.512], label="AUTO")
plt.plot([955.681,1634.463,2379.397,4766.512], label="NCCL")
plt.plot([845.438,1850.008,2355.609,4801.412], label="RING")
plt.xticks([0,1,2,3], [1,2,4,8])
plt.ylabel("throughput")
plt.xlabel("number of GPUs")
plt.legend()
plt.savefig("2.6.png")
print("Experiment plot is successfully generated")
plt.clf()